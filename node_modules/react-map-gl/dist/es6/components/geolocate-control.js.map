{"version":3,"sources":["../../../src/components/geolocate-control.js"],"names":["React","createRef","PropTypes","WebMercatorViewport","mapboxgl","BaseControl","Marker","MapState","TransitionManager","isGeolocationSupported","LINEAR_TRANSITION_PROPS","Object","assign","defaultProps","transitionDuration","noop","propTypes","className","string","style","object","label","positionOptions","fitBoundsOptions","trackUserLocation","bool","showUserLocation","onViewStateChange","func","onViewportChange","GeolocateControl","supportsGeolocation","markerPosition","console","warn","controlOptions","forEach","prop","props","_mapboxGeolocateControl","_watchState","_geolocateButton","_geolocateButtonRef","current","_updateMarker","_updateCamera","_setup","_map","_context","map","on","trigger","position","setState","coords","center","LngLat","longitude","latitude","radius","accuracy","bounds","toBounds","_ne","lng","lat","_sw","viewport","_getBounds","zoom","fitBounds","newViewState","mapState","viewState","getViewportProps","type","callback","state","e","preventDefault","componentDidMount","then","result","_setupMapboxGeolocateControl","componentWillUnmount","geolocationWatchID","_geolocationWatchID","undefined","window","navigator","geolocation","clearWatch","_render","_renderMarker","_containerRef","_renderButton","_onClickGeolocate"],"mappings":"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","sourcesContent":["// @flow\n\n/* global window */\nimport React, {createRef} from 'react';\nimport PropTypes from 'prop-types';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport mapboxgl from '../utils/mapboxgl';\n\nimport BaseControl from './base-control';\nimport Marker from './marker';\nimport MapState from '../utils/map-state';\nimport TransitionManager from '../utils/transition-manager';\nimport {isGeolocationSupported} from '../utils/geolocate-utils';\n\nimport type {BaseControlProps} from './base-control';\n\nconst LINEAR_TRANSITION_PROPS = Object.assign({}, TransitionManager.defaultProps, {\n  transitionDuration: 500\n});\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  style: PropTypes.object,\n  // Custom label assigned to the control\n  label: PropTypes.string,\n\n  // mapbox geolocate options\n  // https://docs.mapbox.com/mapbox-gl-js/api/#geolocatecontrol\n  positionOptions: PropTypes.object,\n  fitBoundsOptions: PropTypes.object,\n  trackUserLocation: PropTypes.bool,\n  showUserLocation: PropTypes.bool,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  style: {},\n  label: 'Geolocate',\n\n  // mapbox geolocate options\n  positionOptions: null,\n  fitBoundsOptions: null,\n  trackUserLocation: false,\n  showUserLocation: true\n});\n\nexport type GeolocateControlProps = BaseControlProps & {\n  className: string,\n  style: Object,\n  label: string,\n  positionOptions: any,\n  fitBoundsOptions: any,\n  trackUserLocation: boolean,\n  showUserLocation: boolean,\n  onViewStateChange?: Function,\n  onViewportChange?: Function\n};\n\ntype Coordinate = {\n  longitude: number,\n  latitude: number,\n  accuracy: number\n};\ntype Position = {\n  coords: Coordinate\n};\ntype State = {\n  supportsGeolocation: boolean,\n  markerPosition: ?Coordinate\n};\ntype GeolocateControlOptions = {\n  positionOptions?: any,\n  fitBoundsOptions?: any,\n  trackUserLocation?: boolean,\n  showUserLocation?: boolean\n};\n\nexport default class GeolocateControl extends BaseControl<\n  GeolocateControlProps,\n  State,\n  HTMLDivElement\n> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  state = {\n    supportsGeolocation: false,\n    markerPosition: null\n  };\n\n  _mapboxGeolocateControl: any = null;\n\n  _geolocateButtonRef: {current: null | HTMLButtonElement} = createRef();\n\n  componentDidMount() {\n    isGeolocationSupported().then(result => {\n      this.setState({supportsGeolocation: result});\n      this._setupMapboxGeolocateControl(result);\n    });\n  }\n\n  componentWillUnmount() {\n    // re-implement MapboxGeolocateControl's _onRemove\n    // clear the geolocation watch if exists\n    if (this._mapboxGeolocateControl) {\n      const geolocationWatchID = this._mapboxGeolocateControl._geolocationWatchID;\n      if (geolocationWatchID !== undefined) {\n        window.navigator.geolocation.clearWatch(geolocationWatchID);\n        this._mapboxGeolocateControl._geolocationWatchID = undefined;\n      }\n    }\n  }\n\n  _setupMapboxGeolocateControl = (supportsGeolocation: boolean) => {\n    if (!supportsGeolocation) {\n      /* eslint-disable no-console, no-undef */\n      console.warn(\n        'Geolocation support is not available, the GeolocateControl will not be visible.'\n      );\n      /* eslint-enable no-console, no-undef */\n      return;\n    }\n\n    // For null option, use Mapbox default value\n    const controlOptions: GeolocateControlOptions = {\n      // disable showUserLocation to avoid Mapbox accessing marker before rendering\n      showUserLocation: false\n    };\n    ['positionOptions', 'fitBoundsOptions', 'trackUserLocation'].forEach(prop => {\n      if (prop in this.props && this.props[prop] !== null) {\n        controlOptions[prop] = this.props[prop];\n      }\n    });\n\n    this._mapboxGeolocateControl = new mapboxgl.GeolocateControl(controlOptions);\n\n    // the following re-implement MapboxGeolocateControl's _setupUI\n    // replace mapbox internal prop\n    this._mapboxGeolocateControl._watchState = 'OFF';\n\n    // replace mapbox internal UI elements\n    this._mapboxGeolocateControl._geolocateButton = this._geolocateButtonRef.current;\n\n    // replace mapbox internal methods\n    this._mapboxGeolocateControl._updateMarker = this._updateMarker;\n    this._mapboxGeolocateControl._updateCamera = this._updateCamera;\n\n    this._mapboxGeolocateControl._setup = true;\n  };\n\n  _onClickGeolocate = () => {\n    this._mapboxGeolocateControl._map = this._context.map;\n\n    if (this.props.showUserLocation) {\n      this._mapboxGeolocateControl.on('geolocate', this._updateMarker);\n      this._mapboxGeolocateControl.on('trackuserlocationend', this._updateMarker);\n    }\n\n    return this._mapboxGeolocateControl.trigger();\n  };\n\n  _updateMarker = (position: Position) => {\n    if (position) {\n      this.setState({markerPosition: position.coords});\n    }\n  };\n\n  _getBounds = (position: Position) => {\n    const center = new mapboxgl.LngLat(position.coords.longitude, position.coords.latitude);\n    const radius = position.coords.accuracy;\n    const bounds = center.toBounds(radius);\n\n    return [[bounds._ne.lng, bounds._ne.lat], [bounds._sw.lng, bounds._sw.lat]];\n  };\n\n  _updateCamera = (position: Position) => {\n    const {viewport} = this._context;\n\n    const bounds = this._getBounds(position);\n    const {longitude, latitude, zoom} = new WebMercatorViewport(viewport).fitBounds(bounds);\n\n    const newViewState = Object.assign({}, viewport, {\n      longitude,\n      latitude,\n      zoom\n    });\n    const mapState = new MapState(newViewState);\n    const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n    const onViewportChange = this.props.onViewportChange || this._context.onViewportChange || noop;\n    const onViewStateChange =\n      this.props.onViewStateChange || this._context.onViewStateChange || noop;\n\n    // Call new style callback\n    onViewStateChange({viewState});\n\n    // Call old style callback\n    onViewportChange(viewState);\n  };\n\n  _renderButton = (type: string, label: string, callback: Function) => {\n    return (\n      <button\n        key={type}\n        className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\n        ref={this._geolocateButtonRef}\n        type=\"button\"\n        title={label}\n        onClick={callback}\n      />\n    );\n  };\n\n  _renderMarker = () => {\n    const {markerPosition} = this.state;\n    const {showUserLocation} = this.props;\n    if (!markerPosition || !showUserLocation) {\n      return null;\n    }\n\n    return (\n      // $FlowFixMe\n      <Marker\n        key=\"location-maker\"\n        className=\"mapboxgl-user-location-dot\"\n        longitude={markerPosition.longitude}\n        latitude={markerPosition.latitude}\n        onContextMenu={e => e.preventDefault()}\n        captureDrag={false}\n        captureDoubleClick={false}\n      />\n    );\n  };\n\n  _render() {\n    if (!this.state.supportsGeolocation) {\n      return null;\n    }\n\n    const {className, style, label} = this.props;\n    return (\n      <div>\n        {this._renderMarker()}\n        <div\n          key=\"geolocate-control\"\n          className={`mapboxgl-ctrl mapboxgl-ctrl-group ${className}`}\n          ref={this._containerRef}\n          style={style}\n          onContextMenu={e => e.preventDefault()}\n        >\n          {this._renderButton('geolocate', label, this._onClickGeolocate)}\n        </div>\n      </div>\n    );\n  }\n}\n"],"file":"geolocate-control.js"}