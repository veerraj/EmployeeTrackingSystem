{"ast":null,"code":"import _objectSpread from \"/home/ulcom19/EmployeeTrackingSystem/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/ulcom19/EmployeeTrackingSystem/src/TrackanEmployee.js\";\nimport React, { Component } from 'react';\nimport './home.css';\nimport Dashboard from './Dashboard';\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport Popup from \"reactjs-popup\";\nimport firebase from 'firebase'; //import WebMercatorViewport from 'viewport-mercator-project';\n\nimport Geocoder from 'react-map-gl-geocoder';\nimport MapGL, { Marker } from \"react-map-gl\";\nconst token = 'pk.eyJ1IjoicmFqdmVlcm1ld2FyYSIsImEiOiJjazRqZ3lnOXQwdnQ4M25td3Rtb21taTR6In0.e2-bSIPzJvsidBf3gWOnGw'; //const employees = []\n\nclass TrackanEmployee extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = e => {\n      // const {longitude, latitude, zoom} = new WebMercatorViewport(this.state.viewport)\n      //         .fitBounds([[-122.4, 37.7], [-122.5, 37.8]], {\n      //           padding: 20,\n      //           offset: [0, -100]\n      //         });\n      //     const viewport = {\n      //         ...this.state.viewport,\n      //         longitude,\n      //         latitude,\n      //         zoom,\n      //         transitionDuration: 5000,\n      //         transitionInterpolator: new FlyToInterpolator(),\n      //         transitionEasing: d3.easeCubic\n      //     }\n      //     this.setState({viewport});\n      const db = firebase.firestore();\n      db.collection('EmployeeData').get().then(snapshot => {\n        //const employees = []\n        snapshot.forEach(doc => {\n          const data = doc.data(); //console.log(data)\n\n          this.state.Employees.push(data);\n        }); //console.log(employees);\n        //this.setState({Employees:employees})\n        // console.log(employees)\n      }); //console.log(this.state.Employees)\n    };\n\n    this.mapRef = React.createRef();\n\n    this.handleViewportChange = viewport => {\n      this.setState({\n        viewport: _objectSpread({}, this.state.viewport, viewport)\n      });\n      console.log(this.state.Employees);\n    };\n\n    this.handleGeocoderViewportChange = viewport => {\n      const geocoderDefaultOverrides = {\n        transitionDuration: 1000\n      };\n      return this.handleViewportChange(_objectSpread({}, viewport, geocoderDefaultOverrides));\n    };\n\n    this.state = {\n      viewport: {\n        width: 1000,\n        height: 900,\n        latitude: 24.5854,\n        longitude: 73.7125,\n        zoom: 6,\n        center: [-96, 37.8]\n      },\n      searchResultLayer: null,\n      Employees: []\n    };\n  }\n\n  render() {\n    // const { viewport, searchResultLayer} = this.state\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"map-cls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(MapGL, Object.assign({\n      ref: this.mapRef\n    }, this.state.viewport, {\n      mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n      width: \"100%\",\n      height: \"90%\",\n      onViewportChange: this.handleViewportChange,\n      mapboxApiAccessToken: token,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Geocoder, {\n      mapRef: this.mapRef,\n      onViewportChange: this.handleGeocoderViewportChange,\n      mapboxApiAccessToken: token,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), {}\n    /* <div>\n    <Marker latitude={24.5854} longitude={73.7125} offsetLeft={-20} offsetTop={-10}>\n         <div class=\"mapMarkerStyle\"></div> \n          </Marker>\n    <Marker latitude={26.9124} longitude={75.7873} offsetLeft={-20} offsetTop={-10}>\n         <div class=\"mapMarkerStyle\"></div> \n          </Marker>\n          </div> */\n    // this.state.Employees &&\n    // this.state.Employees.map((emp,index) => {\n    //     return(\n    //       <div>\n    //       <Marker latitude={emp.lat} key={index} longitude={emp.lang} offsetLeft={-20} offsetTop={-10}>\n    //       <div class=\"mapMarkerStyle\"></div> \n    //        </Marker>\n    //        </div>\n    //     );1\n    //})\n    )), React.createElement(Dashboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TrackanEmployee;","map":{"version":3,"sources":["/home/ulcom19/EmployeeTrackingSystem/src/TrackanEmployee.js"],"names":["React","Component","Dashboard","Popup","firebase","Geocoder","MapGL","Marker","token","TrackanEmployee","constructor","props","componentDidMount","e","db","firestore","collection","get","then","snapshot","forEach","doc","data","state","Employees","push","mapRef","createRef","handleViewportChange","viewport","setState","console","log","handleGeocoderViewportChange","geocoderDefaultOverrides","transitionDuration","width","height","latitude","longitude","zoom","center","searchResultLayer","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './home.css';\nimport Dashboard from './Dashboard'\nimport \"mapbox-gl/dist/mapbox-gl.css\"\nimport Popup from \"reactjs-popup\";\nimport firebase from 'firebase';\n//import WebMercatorViewport from 'viewport-mercator-project';\nimport Geocoder from 'react-map-gl-geocoder'\n\n\nimport MapGL,{Marker} from \"react-map-gl\";\n\n\n\nconst token = 'pk.eyJ1IjoicmFqdmVlcm1ld2FyYSIsImEiOiJjazRqZ3lnOXQwdnQ4M25td3Rtb21taTR6In0.e2-bSIPzJvsidBf3gWOnGw';\n//const employees = []\n\nclass TrackanEmployee extends Component{\n  \n  constructor(props){\n    super(props);\n   this.state = {\n   \n      viewport: {\n        width: 1000,\n         height: 900,\n       latitude: 24.5854,\n      longitude: 73.7125,\n       zoom: 6,\n       center: [-96, 37.8],\n  \n       },\n    searchResultLayer: null,\n    Employees:[]\n  \n    };\n  }\n  \n  \n\n  componentDidMount = e =>{\n    // const {longitude, latitude, zoom} = new WebMercatorViewport(this.state.viewport)\n    //         .fitBounds([[-122.4, 37.7], [-122.5, 37.8]], {\n    //           padding: 20,\n    //           offset: [0, -100]\n    //         });\n    //     const viewport = {\n    //         ...this.state.viewport,\n    //         longitude,\n    //         latitude,\n    //         zoom,\n    //         transitionDuration: 5000,\n    //         transitionInterpolator: new FlyToInterpolator(),\n    //         transitionEasing: d3.easeCubic\n    //     }\n    //     this.setState({viewport});\n\n    const db = firebase.firestore();\n    db.collection('EmployeeData')\n    .get()\n    .then(snapshot => {\n        \n        //const employees = []\n        snapshot.forEach( doc => {\n        const data = doc.data()\n        //console.log(data)\n        this.state.Employees.push(data);\n        })\n        //console.log(employees);\n       //this.setState({Employees:employees})\n      // console.log(employees)\n        \n    })\n    //console.log(this.state.Employees)\n    \n  }\n  \n  \n  mapRef = React.createRef()\n  handleViewportChange = viewport => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    })\n    console.log(this.state.Employees);\n  }\n\n  // if you are happy with Geocoder default settings, you can just use handleViewportChange directly\n  handleGeocoderViewportChange = (viewport) => {\n    const geocoderDefaultOverrides = { transitionDuration: 1000 }\n \n    return this.handleViewportChange({\n      ...viewport,\n      ...geocoderDefaultOverrides\n    })\n  }\n \n\n    render(){\n     // const { viewport, searchResultLayer} = this.state\n      return (\n        <div>\n        <div className=\"map-cls\">\n          <MapGL \n            ref={this.mapRef}\n            {...this.state.viewport}\n            mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n            width=\"100%\"\n            height=\"90%\"\n            onViewportChange={this.handleViewportChange}\n            mapboxApiAccessToken={token}\n            >\n            <Geocoder\n          mapRef={this.mapRef}\n          onViewportChange={this.handleGeocoderViewportChange}\n          mapboxApiAccessToken={token}\n            ></Geocoder>\n\n            {\n              {/* <div>\n              <Marker latitude={24.5854} longitude={73.7125} offsetLeft={-20} offsetTop={-10}>\n                    <div class=\"mapMarkerStyle\"></div> \n                     </Marker>\n              <Marker latitude={26.9124} longitude={75.7873} offsetLeft={-20} offsetTop={-10}>\n                    <div class=\"mapMarkerStyle\"></div> \n                     </Marker>\n                     </div> */}\n              \n              // this.state.Employees &&\n              // this.state.Employees.map((emp,index) => {\n              //     return(\n              //       <div>\n              //       <Marker latitude={emp.lat} key={index} longitude={emp.lang} offsetLeft={-20} offsetTop={-10}>\n              //       <div class=\"mapMarkerStyle\"></div> \n              //        </Marker>\n                    \n              //        </div>\n              //     );1\n                  \n              //})\n          }\n           \n            \n            \n            \n              \n            </MapGL>\n    \n            \n        </div>\n        <Dashboard/>\n        </div>\n      )\n    }\n}\n\nexport default TrackanEmployee;"]},"metadata":{},"sourceType":"module"}