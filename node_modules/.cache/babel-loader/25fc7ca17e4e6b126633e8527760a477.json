{"ast":null,"code":"var _jsxFileName = \"/home/ulcom19/EmployeeTrackingSystem/src/AssignTask.js\";\nimport React, { Component } from 'react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Dashboard from './Dashboard';\nimport firebase from 'firebase';\n\nclass AssignTask extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees: '',\n      empid: '',\n      retid: '',\n      Retailers: '',\n      selectValue1: '',\n      name: '',\n      textarea: '',\n      date: new Date()\n    };\n\n    this.ReadEmployeeData = e => {\n      const db = firebase.firestore();\n      db.collection('EmployeeData').get().then(snapshot => {\n        const employees = [];\n        const Id = [];\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const id = doc.id;\n          employees.push(data);\n          Id.push(id);\n        });\n        this.setState({\n          employees: employees,\n          empid: Id\n        });\n      });\n    };\n\n    this.componentDidMount = e => {\n      const db = firebase.firestore();\n      db.collection('RetailerData').get().then(snapshot => {\n        const Id = [];\n        const Retailers = [];\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const id = doc.id;\n          Retailers.push(data);\n          Id.push(id);\n        });\n        this.setState({\n          Retailers: Retailers,\n          retid: Id\n        });\n      });\n      db.collection('EmployeeData').get().then(snapshot => {\n        const employees = [];\n        const Id = [];\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const id = doc.id;\n          employees.push(data);\n          Id.push(id);\n        });\n        this.setState({\n          employees: employees,\n          empid: Id\n        });\n      });\n    };\n\n    this.SendTask = e => {\n      e.preventDefault();\n      const db = firebase.firestore();\n      console.log(this.state.textarea);\n      db.collection('EmployeeData').doc(this.state.selectValue1).update({\n        MeetingMsg: 'Your Meeting with ' + this.state.name + ' on ' + this.state.date + ' is sheduled and Message from manager ' + this.state.textarea\n      });\n      document.getElementById(\"myform\").reset();\n    };\n\n    this.handleDropdownChange1 = event => {\n      event.preventDefault();\n      var index = event.target.selectedIndex;\n      var optionElement = event.target.childNodes[index];\n      this.setState({\n        selectValue1: optionElement.getAttribute('data-id')\n      });\n    };\n\n    this.handleDropdownChange2 = event => {\n      event.preventDefault();\n      var index = event.target.selectedIndex;\n      var optionElement = event.target.childNodes[index];\n      this.setState({\n        name: optionElement.text\n      });\n      console.log(this.state.name);\n    };\n\n    this.textMessage = e => {\n      e.preventDefault();\n      this.setState({\n        textarea: e.target.value\n      });\n    };\n\n    this.onChange = date => this.setState({\n      date\n    });\n  }\n\n  render() {\n    const mystyle = {\n      margin: '65px 0 0 0'\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container-fluid bg-light py-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: mystyle,\n      class: \"col-md-6 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      class: \"text-center mb-4 form-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Assign Task\"), React.createElement(\"form\", {\n      onSubmit: this.SendTask,\n      id: \"myform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      class: \"form-control marg-all-text-input\",\n      id: \"\",\n      onChange: this.handleDropdownChange1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" Select Employee Name...\"), this.state.employees && this.state.employees.map((employee, key = key + 1) => {\n      return React.createElement(\"option\", {\n        \"data-id\": this.state.empid[key],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, employee.firstName, \" \", employee.lastName);\n    })), React.createElement(\"select\", {\n      class: \"form-control marg-all-text-input\",\n      id: \"Dropdown\",\n      onChange: this.handleDropdownChange2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \" Select Retailer Name...\"), this.state.Retailers && this.state.Retailers.map((Retailer, key = key + 1) => {\n      return React.createElement(\"option\", {\n        \"data-id\": this.state.retid[key],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, Retailer.firstName, \" \", Retailer.lastName);\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(DateTimePicker, {\n      onChange: this.onChange,\n      value: this.state.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"textarea\", {\n      onChange: this.textMessage,\n      className: \"textarea-dec\",\n      rows: \"3\",\n      placeholder: \"Enter Complete Details of task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      class: \"btn bg-color\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Assign Task\"))))))), React.createElement(Dashboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AssignTask;","map":{"version":3,"sources":["/home/ulcom19/EmployeeTrackingSystem/src/AssignTask.js"],"names":["React","Component","DateTimePicker","Dashboard","firebase","AssignTask","state","employees","empid","retid","Retailers","selectValue1","name","textarea","date","Date","ReadEmployeeData","e","db","firestore","collection","get","then","snapshot","Id","forEach","doc","data","id","push","setState","componentDidMount","SendTask","preventDefault","console","log","update","MeetingMsg","document","getElementById","reset","handleDropdownChange1","event","index","target","selectedIndex","optionElement","childNodes","getAttribute","handleDropdownChange2","text","textMessage","value","onChange","render","mystyle","margin","map","employee","key","firstName","lastName","Retailer"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Dashboard from './Dashboard'\nimport firebase from 'firebase';\n\n\nclass AssignTask extends Component{\n \n    state = {\n        employees:'',\n        empid:'',\n        retid:'',\n        Retailers:'',\n        selectValue1:'',\n        name:'',\n        textarea:'',\n        date: new Date()\n    };\n  \n\n    ReadEmployeeData = e =>{\n      const db = firebase.firestore();\n      db.collection('EmployeeData')\n                        .get()\n                        .then(snapshot => {\n                          const employees = []\n                          const Id=[]\n                         \n                          snapshot.forEach( doc => {\n                            const data = doc.data()\n                            const id= doc.id;\n                            employees.push(data);\n                            Id.push(id);\n                          })\n                          this.setState({employees:employees,empid:Id})\n                          \n                        })\n\n    }\n    componentDidMount = e =>{\n      const db = firebase.firestore();\n      db.collection('RetailerData')\n                        .get()\n                        .then(snapshot => {\n                          const Id=[]\n                          const Retailers = []\n                          snapshot.forEach( doc => {\n                            const data = doc.data()\n                            const id= doc.id;\n                            Retailers.push(data);\n                            Id.push(id);\n                          })\n                          this.setState({Retailers:Retailers,retid:Id})\n            \n                        })\n            db.collection('EmployeeData')\n            .get()\n            .then(snapshot => {\n                const employees = []\n                const Id=[]\n                \n                snapshot.forEach( doc => {\n                const data = doc.data()\n                const id= doc.id;\n                employees.push(data);\n                Id.push(id);\n                })\n                this.setState({employees:employees,empid:Id})\n                \n            })\n    }\n    SendTask = e =>{\n        e.preventDefault();\n        const db = firebase.firestore();\n        console.log(this.state.textarea)\n        db.collection('EmployeeData').doc(this.state.selectValue1).update({\n            MeetingMsg:'Your Meeting with '+this.state.name+' on '+this.state.date+' is sheduled and Message from manager '+this.state.textarea\n        })\n        \n        document.getElementById(\"myform\").reset();\n    }\n    handleDropdownChange1 = event =>{\n        event.preventDefault();\n        var index = event.target.selectedIndex;\n        var optionElement = event.target.childNodes[index]\n        this.setState({selectValue1:optionElement.getAttribute('data-id')})\n        \n      }\n    handleDropdownChange2 = event =>{\n        event.preventDefault();\n        var index = event.target.selectedIndex;\n        var optionElement = event.target.childNodes[index]\n        this.setState({name:optionElement.text})\n        console.log(this.state.name)\n       }\n       textMessage=e=>{\n        e.preventDefault();\n        this.setState({textarea:e.target.value})\n       }\n\n    \n          onChange = date => this.setState({ date })\n\nrender()\n{\n    const mystyle={\n        margin:'65px 0 0 0'\n    }\n    return(\n        <div>\n        <div class=\"container-fluid bg-light py-3\">\n    <div class=\"row\">\n        <div style={mystyle} class=\"col-md-6 mx-auto\">\n                <div class=\"card card-body\">\n                    <h3 class=\"text-center mb-4 form-heading\">Assign Task</h3>\n                    <form onSubmit={this.SendTask} id=\"myform\">\n                    <fieldset>\n                    <select class=\"form-control marg-all-text-input\" id=\"\" onChange={this.handleDropdownChange1}>\n                    <option value=\"\" disabled selected hidden> Select Employee Name...</option>\n                    {\n                        this.state.employees &&\n                        this.state.employees.map( (employee,key=key+1) =>{\n                            return(\n                                <option data-id={this.state.empid[key]} >{employee.firstName} {employee.lastName}</option>\n                    \n                            );\n                        })\n                    }\n                    </select>\n                    <select class=\"form-control marg-all-text-input\" id=\"Dropdown\" onChange={this.handleDropdownChange2} >\n                    <option value=\"\" disabled selected hidden> Select Retailer Name...</option>\n                    {\n                    \n                        this.state.Retailers &&\n                        this.state.Retailers.map(  (Retailer,key=key+1) =>{\n                         return(\n                            <option data-id={this.state.retid[key]}>{Retailer.firstName} {Retailer.lastName}</option>\n                            \n                         ); \n                        })\n                    }\n                    </select>\n                                        \n                    \n                  \n                        <div >\n                            <DateTimePicker\n                            onChange={this.onChange}\n                            value={this.state.date}\n                            />\n                        </div>\n                        <textarea onChange={this.textMessage} className=\"textarea-dec\" rows=\"3\" placeholder=\"Enter Complete Details of task\">\n                        \n                        </textarea>\n                        <button class=\"btn bg-color\" type=\"submit\">Assign Task</button>\n                    </fieldset>\n                    </form>\n                </div>\n        </div>\n    </div>\n</div>\n        \n        <Dashboard/>\n        </div>\n\n    )\n}\n\n}\nexport default AssignTask;"]},"metadata":{},"sourceType":"module"}