{"ast":null,"code":"var _jsxFileName = \"/home/ulcom19/EmployeeTrackingSystem/src/TrackanEmployee.js\";\nimport React, { Component } from 'react';\nimport './home.css';\nimport Dashboard from './Dashboard';\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport Popup from \"reactjs-popup\";\nimport firebase from 'firebase'; //import WebMercatorViewport from 'viewport-mercator-project';\n\nimport Geocoder from 'react-map-gl-geocoder';\nimport MapGL, { Marker } from \"react-map-gl\";\nconst token = 'pk.eyJ1IjoicmFqdmVlcm1ld2FyYSIsImEiOiJjazRqZ3lnOXQwdnQ4M25td3Rtb21taTR6In0.e2-bSIPzJvsidBf3gWOnGw'; //const employees = []\n\nclass TrackanEmployee extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = e => {\n      // const {longitude, latitude, zoom} = new WebMercatorViewport(this.state.viewport)\n      //         .fitBounds([[-122.4, 37.7], [-122.5, 37.8]], {\n      //           padding: 20,\n      //           offset: [0, -100]\n      //         });\n      //     const viewport = {\n      //         ...this.state.viewport,\n      //         longitude,\n      //         latitude,\n      //         zoom,\n      //         transitionDuration: 5000,\n      //         transitionInterpolator: new FlyToInterpolator(),\n      //         transitionEasing: d3.easeCubic\n      //     }\n      //     this.setState({viewport});\n      const db = firebase.firestore();\n      db.collection('EmployeeData').get().then(snapshot => {\n        //const employees = []\n        snapshot.forEach(doc => {\n          const data = doc.data(); //console.log(data)\n\n          this.state.Employees.push(data);\n        }); //console.log(employees);\n        //this.setState({Employees:employees})\n        // console.log(employees)\n      }); //console.log(this.state.Employees)\n    };\n\n    this.mapRef = React.createRef();\n\n    this.handleViewportChange = viewport => {\n      console.log('event', viewport);\n      console.log('this.state.viewPort', this.state.viewport); // this.setState({\n      //   viewport: { ...this.state.viewport, ...viewport }\n      // })\n    };\n\n    this.handleGeocoderViewportChange = viewport => {// const geocoderDefaultOverrides = { transitionDuration: 1000 }\n      // return this.handleViewportChange({\n      //   ...viewport,\n      //   ...geocoderDefaultOverrides\n      // })\n    };\n\n    this.state = {\n      viewport: {\n        width: 1000,\n        height: 900,\n        latitude: 24.5854,\n        longitude: 73.7125,\n        zoom: 6,\n        center: [-96, 37.8]\n      },\n      searchResultLayer: null,\n      Employees: []\n    };\n  }\n\n  render() {\n    console.log(this.state.Employees); // const { viewport, searchResultLayer} = this.state\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"map-cls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(MapGL, Object.assign({\n      ref: this.mapRef\n    }, this.state.viewport, {\n      mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n      width: \"100%\",\n      height: \"90%\",\n      onViewportChange: this.handleViewportChange,\n      mapboxApiAccessToken: token,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Geocoder, {\n      mapRef: this.mapRef,\n      onViewportChange: this.handleGeocoderViewportChange,\n      mapboxApiAccessToken: token,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }),\n    /* <div>\n    <Marker latitude={24.5854} longitude={73.7125} offsetLeft={-20} offsetTop={-10}>\n         <div class=\"mapMarkerStyle\"></div> \n          </Marker>\n    <Marker latitude={26.9124} longitude={75.7873} offsetLeft={-20} offsetTop={-10}>\n         <div class=\"mapMarkerStyle\"></div> \n          </Marker>\n          </div> */\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, this.state.Employees && this.state.Employees.map((emp, index) => React.createElement(Marker, {\n      latitude: emp.lat,\n      key: index,\n      longitude: emp.lang,\n      offsetLeft: -20,\n      offsetTop: -10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"mapMarkerStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })))))), React.createElement(Dashboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TrackanEmployee;","map":{"version":3,"sources":["/home/ulcom19/EmployeeTrackingSystem/src/TrackanEmployee.js"],"names":["React","Component","Dashboard","Popup","firebase","Geocoder","MapGL","Marker","token","TrackanEmployee","constructor","props","componentDidMount","e","db","firestore","collection","get","then","snapshot","forEach","doc","data","state","Employees","push","mapRef","createRef","handleViewportChange","viewport","console","log","handleGeocoderViewportChange","width","height","latitude","longitude","zoom","center","searchResultLayer","render","map","emp","index","lat","lang"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './home.css';\nimport Dashboard from './Dashboard'\nimport \"mapbox-gl/dist/mapbox-gl.css\"\nimport Popup from \"reactjs-popup\";\nimport firebase from 'firebase';\n//import WebMercatorViewport from 'viewport-mercator-project';\nimport Geocoder from 'react-map-gl-geocoder'\n\n\nimport MapGL, { Marker } from \"react-map-gl\";\n\n\n\nconst token = 'pk.eyJ1IjoicmFqdmVlcm1ld2FyYSIsImEiOiJjazRqZ3lnOXQwdnQ4M25td3Rtb21taTR6In0.e2-bSIPzJvsidBf3gWOnGw';\n//const employees = []\n\nclass TrackanEmployee extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      viewport: {\n        width: 1000,\n        height: 900,\n        latitude: 24.5854,\n        longitude: 73.7125,\n        zoom: 6,\n        center: [-96, 37.8],\n\n      },\n      searchResultLayer: null,\n      Employees: []\n\n    };\n  }\n\n\n\n  componentDidMount = e => {\n    // const {longitude, latitude, zoom} = new WebMercatorViewport(this.state.viewport)\n    //         .fitBounds([[-122.4, 37.7], [-122.5, 37.8]], {\n    //           padding: 20,\n    //           offset: [0, -100]\n    //         });\n    //     const viewport = {\n    //         ...this.state.viewport,\n    //         longitude,\n    //         latitude,\n    //         zoom,\n    //         transitionDuration: 5000,\n    //         transitionInterpolator: new FlyToInterpolator(),\n    //         transitionEasing: d3.easeCubic\n    //     }\n    //     this.setState({viewport});\n\n    const db = firebase.firestore();\n    db.collection('EmployeeData')\n      .get()\n      .then(snapshot => {\n\n        //const employees = []\n        snapshot.forEach(doc => {\n          const data = doc.data()\n          //console.log(data)\n          this.state.Employees.push(data);\n        })\n        //console.log(employees);\n        //this.setState({Employees:employees})\n        // console.log(employees)\n\n      })\n    //console.log(this.state.Employees)\n\n  }\n\n\n  mapRef = React.createRef()\n  handleViewportChange = viewport => {\n    console.log('event', viewport)\n    console.log('this.state.viewPort', this.state.viewport);\n    // this.setState({\n    //   viewport: { ...this.state.viewport, ...viewport }\n    // })\n  }\n\n  // if you are happy with Geocoder default settings, you can just use handleViewportChange directly\n  handleGeocoderViewportChange = (viewport) => {\n    // const geocoderDefaultOverrides = { transitionDuration: 1000 }\n\n    // return this.handleViewportChange({\n    //   ...viewport,\n    //   ...geocoderDefaultOverrides\n    // })\n  }\n\n\n  render() {\n    console.log(this.state.Employees);\n    // const { viewport, searchResultLayer} = this.state\n    return (\n      <div>\n        <div className=\"map-cls\">\n          <MapGL\n            ref={this.mapRef}\n            {...this.state.viewport}\n            mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n            width=\"100%\"\n            height=\"90%\"\n            onViewportChange={this.handleViewportChange}\n            mapboxApiAccessToken={token}\n          >\n            <Geocoder\n              mapRef={this.mapRef}\n              onViewportChange={this.handleGeocoderViewportChange}\n              mapboxApiAccessToken={token}\n            ></Geocoder>\n\n            {\n              /* <div>\n             <Marker latitude={24.5854} longitude={73.7125} offsetLeft={-20} offsetTop={-10}>\n                   <div class=\"mapMarkerStyle\"></div> \n                    </Marker>\n             <Marker latitude={26.9124} longitude={75.7873} offsetLeft={-20} offsetTop={-10}>\n                   <div class=\"mapMarkerStyle\"></div> \n                    </Marker>\n                    </div> */\n              <div>\n                {this.state.Employees &&\n                  this.state.Employees.map((emp, index) => (\n                    <Marker latitude={emp.lat} key={index} longitude={emp.lang} offsetLeft={-20} offsetTop={-10}>\n                      <div class=\"mapMarkerStyle\"></div>\n                    </Marker>\n                  ))}\n              </div>\n            }\n\n\n\n\n\n          </MapGL>\n\n\n        </div>\n        <Dashboard />\n      </div>\n    )\n  }\n}\n\nexport default TrackanEmployee;"]},"metadata":{},"sourceType":"module"}