{"ast":null,"code":"import _objectSpread from \"/home/ulcom19/EmployeeTrackingSystem/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/ulcom19/EmployeeTrackingSystem/src/TrackanEmployee.js\";\nimport React, { Component } from 'react';\nimport './home.css';\nimport Dashboard from './Dashboard';\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport Popup from \"reactjs-popup\";\nimport firebase from 'firebase'; //import WebMercatorViewport from 'viewport-mercator-project';\n\nimport Geocoder from 'react-map-gl-geocoder';\nimport MapGL, { Marker } from \"react-map-gl\";\nconst token = 'pk.eyJ1IjoicmFqdmVlcm1ld2FyYSIsImEiOiJjazRqZ3lnOXQwdnQ4M25td3Rtb21taTR6In0.e2-bSIPzJvsidBf3gWOnGw'; //const employees = []\n\nclass TrackanEmployee extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      // const {longitude, latitude, zoom} = new WebMercatorViewport(this.state.viewport)\n      //         .fitBounds([[-122.4, 37.7], [-122.5, 37.8]], {\n      //           padding: 20,\n      //           offset: [0, -100]\n      //         });\n      //     const viewport = {\n      //         ...this.state.viewport,\n      //         longitude,\n      //         latitude,\n      //         zoom,\n      //         transitionDuration: 5000,\n      //         transitionInterpolator: new FlyToInterpolator(),\n      //         transitionEasing: d3.easeCubic\n      //     }\n      //     this.setState({viewport});\n      const db = firebase.firestore();\n      let employees = [];\n      db.collection('EmployeeData').get().then(snapshot => {\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          console.log('********', data); //console.log(data)\n          // this.state.Employees.push(data);\n\n          employees.push(data);\n        }); //console.log(employees);\n        // console.log(employees)\n      });\n      console.log('ddddddddddddddddd', employees); // this.setState({ Employees: employees })\n      //console.log(this.state.Employees)\n    };\n\n    this.mapRef = React.createRef();\n\n    this.handleViewportChange = viewport => {\n      console.log('event', viewport);\n      console.log('this.state.viewPort', this.state.viewport);\n      this.setState({\n        viewport: _objectSpread({}, this.state.viewport, viewport)\n      });\n    };\n\n    this.handleGeocoderViewportChange = viewport => {\n      const geocoderDefaultOverrides = {\n        transitionDuration: 1000\n      };\n      return this.handleViewportChange(_objectSpread({}, viewport, geocoderDefaultOverrides));\n    };\n\n    this.state = {\n      viewport: {\n        width: 1000,\n        height: 900,\n        latitude: 24.5854,\n        longitude: 73.7125,\n        zoom: 6,\n        center: [-96, 37.8]\n      },\n      searchResultLayer: null,\n      Employees: [{\n        Address: \"193 i block sec 14\",\n        MeetingMsg: \"Your Meeting with Pankaj Chaturvedi on Mon Dec 30 2019 20:35:34 GMT+0530 (India Standard Time) is sheduled and Message from manager \",\n        PhoneNo: \"8118832168\",\n        city: \"Udaipur\",\n        email: \"sranjeet022@gmail.com\",\n        firstName: \"Ranjeet\",\n        lang: 73.6932252,\n        lastName: \"Singh\",\n        lat: 24.5376219,\n        phoneNo: \"9950202576\",\n        state: \"Rajasthan\",\n        zip: \"313007\"\n      }, {\n        Address: \"Udaipur\",\n        MeetingMsg: \"Your Meeting with Ranjeet Singh on Sun Dec 29 2019 13:35:46 GMT+0530 (India Standard Time) is sheduled and Message from manager jai\",\n        PhoneNo: \"123456789\",\n        city: \"Udaipur\",\n        email: \"chaturvedipankaj2244@gmail.com\",\n        firstName: \"Pankaj\",\n        lang: 73.7835729,\n        lastName: \"Chaturvedi\",\n        lat: 24.5931685,\n        phoneNo: \"9784341957\",\n        state: \"Rajasthan\",\n        zip: \"313002\"\n      }]\n    };\n  }\n\n  render() {\n    console.log(this.state.Employees); // const { viewport, searchResultLayer} = this.state\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"map-cls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(MapGL, Object.assign({\n      ref: this.mapRef\n    }, this.state.viewport, {\n      mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n      width: \"100%\",\n      height: \"90%\",\n      onViewportChange: this.handleViewportChange.bind(this),\n      mapboxApiAccessToken: token,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Geocoder, {\n      mapRef: this.mapRef,\n      onViewportChange: this.handleGeocoderViewportChange,\n      mapboxApiAccessToken: token,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }),\n    /* <div>\n      <Marker latitude={24.5854} longitude={73.7125} offsetLeft={-20} offsetTop={-10}>\n        <div class=\"mapMarkerStyle\"></div>\n      </Marker>\n      <Marker latitude={26.9124} longitude={75.7873} offsetLeft={-20} offsetTop={-10}>\n        <div class=\"mapMarkerStyle\"></div>\n      </Marker>\n    </div> */\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.Employees && this.state.Employees.map((emp, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      latitude: emp.lat,\n      longitude: emp.lang,\n      offsetLeft: -20,\n      offsetTop: -10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapMarkerStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))))))), React.createElement(Dashboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TrackanEmployee;","map":{"version":3,"sources":["/home/ulcom19/EmployeeTrackingSystem/src/TrackanEmployee.js"],"names":["React","Component","Dashboard","Popup","firebase","Geocoder","MapGL","Marker","token","TrackanEmployee","constructor","props","componentDidMount","db","firestore","employees","collection","get","then","snapshot","forEach","doc","data","console","log","push","mapRef","createRef","handleViewportChange","viewport","state","setState","handleGeocoderViewportChange","geocoderDefaultOverrides","transitionDuration","width","height","latitude","longitude","zoom","center","searchResultLayer","Employees","Address","MeetingMsg","PhoneNo","city","email","firstName","lang","lastName","lat","phoneNo","zip","render","bind","map","emp","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './home.css';\nimport Dashboard from './Dashboard'\nimport \"mapbox-gl/dist/mapbox-gl.css\"\nimport Popup from \"reactjs-popup\";\nimport firebase from 'firebase';\n//import WebMercatorViewport from 'viewport-mercator-project';\nimport Geocoder from 'react-map-gl-geocoder'\n\n\nimport MapGL, { Marker } from \"react-map-gl\";\n\n\n\nconst token = 'pk.eyJ1IjoicmFqdmVlcm1ld2FyYSIsImEiOiJjazRqZ3lnOXQwdnQ4M25td3Rtb21taTR6In0.e2-bSIPzJvsidBf3gWOnGw';\n//const employees = []\n\nclass TrackanEmployee extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      viewport: {\n        width: 1000,\n        height: 900,\n        latitude: 24.5854,\n        longitude: 73.7125,\n        zoom: 6,\n        center: [-96, 37.8],\n\n      },\n      searchResultLayer: null,\n      Employees: [{\n        Address: \"193 i block sec 14\",\n        MeetingMsg: \"Your Meeting with Pankaj Chaturvedi on Mon Dec 30 2019 20:35:34 GMT+0530 (India Standard Time) is sheduled and Message from manager \",\n        PhoneNo: \"8118832168\",\n        city: \"Udaipur\",\n        email: \"sranjeet022@gmail.com\",\n        firstName: \"Ranjeet\",\n        lang: 73.6932252,\n        lastName: \"Singh\",\n        lat: 24.5376219,\n        phoneNo: \"9950202576\",\n        state: \"Rajasthan\",\n        zip: \"313007\"\n      }, {\n        Address: \"Udaipur\",\n        MeetingMsg: \"Your Meeting with Ranjeet Singh on Sun Dec 29 2019 13:35:46 GMT+0530 (India Standard Time) is sheduled and Message from manager jai\",\n        PhoneNo: \"123456789\",\n        city: \"Udaipur\",\n        email: \"chaturvedipankaj2244@gmail.com\",\n        firstName: \"Pankaj\",\n        lang: 73.7835729,\n        lastName: \"Chaturvedi\",\n        lat: 24.5931685,\n        phoneNo: \"9784341957\",\n        state: \"Rajasthan\",\n        zip: \"313002\"\n      }]\n\n    };\n  }\n\n\n\n  componentDidMount = () => {\n    // const {longitude, latitude, zoom} = new WebMercatorViewport(this.state.viewport)\n    //         .fitBounds([[-122.4, 37.7], [-122.5, 37.8]], {\n    //           padding: 20,\n    //           offset: [0, -100]\n    //         });\n    //     const viewport = {\n    //         ...this.state.viewport,\n    //         longitude,\n    //         latitude,\n    //         zoom,\n    //         transitionDuration: 5000,\n    //         transitionInterpolator: new FlyToInterpolator(),\n    //         transitionEasing: d3.easeCubic\n    //     }\n    //     this.setState({viewport});\n\n    const db = firebase.firestore();\n    let employees = [];\n    db.collection('EmployeeData')\n      .get()\n      .then(snapshot => {\n\n        snapshot.forEach(doc => {\n          const data = doc.data()\n          console.log('********', data)\n          //console.log(data)\n          // this.state.Employees.push(data);\n          employees.push(data);\n        })\n        //console.log(employees);\n        // console.log(employees)\n\n      })\n    console.log('ddddddddddddddddd', employees)\n    // this.setState({ Employees: employees })\n    //console.log(this.state.Employees)\n\n  }\n\n\n  mapRef = React.createRef()\n  handleViewportChange = viewport => {\n    console.log('event', viewport)\n    console.log('this.state.viewPort', this.state.viewport);\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    })\n  }\n\n  // if you are happy with Geocoder default settings, you can just use handleViewportChange directly\n  handleGeocoderViewportChange = (viewport) => {\n    const geocoderDefaultOverrides = { transitionDuration: 1000 }\n\n    return this.handleViewportChange({\n      ...viewport,\n      ...geocoderDefaultOverrides\n    })\n  }\n\n\n  render() {\n    console.log(this.state.Employees);\n    // const { viewport, searchResultLayer} = this.state\n    return (\n      <div>\n        <div className=\"map-cls\">\n          <MapGL\n            ref={this.mapRef}\n            {...this.state.viewport}\n            mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n            width=\"100%\"\n            height=\"90%\"\n            onViewportChange={this.handleViewportChange.bind(this)}\n            mapboxApiAccessToken={token}\n          >\n            <Geocoder\n              mapRef={this.mapRef}\n              onViewportChange={this.handleGeocoderViewportChange}\n              mapboxApiAccessToken={token}\n            ></Geocoder>\n\n            {\n              /* <div>\n                <Marker latitude={24.5854} longitude={73.7125} offsetLeft={-20} offsetTop={-10}>\n                  <div class=\"mapMarkerStyle\"></div>\n                </Marker>\n                <Marker latitude={26.9124} longitude={75.7873} offsetLeft={-20} offsetTop={-10}>\n                  <div class=\"mapMarkerStyle\"></div>\n                </Marker>\n              </div> */\n              <div>\n                {this.state.Employees &&\n                  this.state.Employees.map((emp, index) => (\n                    <div key={index}>\n                      <Marker latitude={emp.lat} longitude={emp.lang} offsetLeft={-20} offsetTop={-10}>\n                        <div className=\"mapMarkerStyle\"></div>\n                      </Marker>\n                    </div>\n                  ))}\n              </div>\n            }\n\n\n\n\n\n          </MapGL>\n\n\n        </div>\n        <Dashboard />\n      </div>\n    )\n  }\n}\n\nexport default TrackanEmployee;"]},"metadata":{},"sourceType":"module"}